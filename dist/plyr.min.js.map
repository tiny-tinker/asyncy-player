{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/arrays.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/utils/i18n.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","keyboardEvent","KeyboardEvent","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","removeAttribute","toggleClass","force","map","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","setFocus","tabFocus","focus","config","classNames","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","repaint","setTimeout","offsetHeight","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","err","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","storage","cancelRequests","blankVideo","debug","log","dedupe","item","indexOf","getDeep","path","reduce","obj","target","sources","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","Storage","classCallCheck","enabled","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","body","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","bindMenuItemShortcuts","menuItem","which","preventDefault","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","focusFirstMenuItem","createMenuItem","_this2","list","_ref$badge","_ref$checked","checked","aria-checked","flex","enumerable","children","node","listeners","bind","currentTrack","speed","parseFloat","updateTimeDisplay","updateVolume","setRange","muted","pressed","updateProgress","_this3","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this4","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleMenuButton","setting","updateSetting","pane","panels","default","getLabel","setQualityMenu","_this5","checkMenu","sort","a","b","sorting","getBadge","setCaptionsMenu","_this6","tracks","getTracks","toggled","language","unshift","setSpeedMenu","_this7","isVimeo","values","some","popup","firstItem","toggleMenu","show","isMenuItem","getMenuSize","tab","clone","position","opacity","scrollWidth","height","scrollHeight","_this8","size","restore","propertyName","create","_this9","aria-haspopup","aria-controls","aria-expanded","inner","home","backButton","inject","_this10","floor","random","props","seektime","addProperty","controlPressed","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","hideControlbarOnLoad","loop","selected","keyboard","focused","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","google","publisherId","providers","types","noop","Console","console","onChange","first","last","keyCode","activeElement","shiftKey","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","ready","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","is_stopped","Listeners","lastKey","focusTimer","lastKeyDown","handleKey","setTabFocus","firstTouch","code","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","timeStamp","wasKeyDown","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","proxy","inputEvent","rect","currentTarget","hasAttribute","done","seekTo","isFocusIn","webkitDirectionInvertedFromDevice","_map","deltaX","deltaY","_map2","direction","sign","abs","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","module","exports","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","format$$1","playerVars","hl","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","search","truthy","searchParams","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","states","webkitPresentationMode","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isKeyboardEvent = input => instanceOf(input, KeyboardEvent);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    keyboardEvent: isKeyboardEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n        return;\n    }\n\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n        return;\n    }\n\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hidden;\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.nodeList(element)) {\n        return Array.from(element).map(e => toggleClass(e, className, force));\n    }\n\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = document.activeElement;\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    // Set regular focus\n    element.focus();\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n        toggleClass(element, this.config.classNames.tabFocus);\n    }\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(\n        event => element.style[event] !== undefined,\n    );\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        try {\n            toggleHidden(element, true);\n            element.offsetHeight; // eslint-disable-line\n            toggleHidden(element, false);\n        } catch (e) {\n            // Do nothing\n        }\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                // Set new source\n                player.media.src = source.getAttribute('src');\n\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                if (preload !== 'none' || readyState) {\n                    // Restore time\n                    player.once('loadedmetadata', () => {\n                        player.currentTime = currentTime;\n\n                        // Resume playing\n                        if (!paused) {\n                            player.play();\n                        }\n                    });\n\n                    // Load new source\n                    player.media.load();\n                }\n\n                // Trigger change event\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n\n                // Save to storage\n                player.storage.set({ quality: input });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        removeElement(html5.getSources.call(this));\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return (current / max * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './is';\nimport { getDeep } from './objects';\nimport { replaceAll } from './strings';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, setFocus, toggleClass, toggleHidden } from './utils/elements';\nimport { off, on } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr = {}) {\n        // Skip i18n for abbreviations and brand names\n        const universals = {\n            pip: 'PIP',\n            airplay: 'AirPlay',\n        };\n        const text = universals[type] || i18n.get(type, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (!attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play-overlaid';\n                break;\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(\n                controls.createIcon.call(this, iconPressed, {\n                    class: 'icon--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createIcon.call(this, icon, {\n                    class: 'icon--not-pressed',\n                }),\n            );\n\n            // Label/Tooltip\n            button.appendChild(\n                controls.createLabel.call(this, labelPressed, {\n                    class: 'label--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createLabel.call(this, label, {\n                    class: 'label--not-pressed',\n                }),\n            );\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Bind keyboard shortcuts for a menu item\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    bindMenuItemShortcuts(menuItem, type) {\n        // Navigate through menus via arrow keys and space\n        on(\n            menuItem,\n            'keydown keyup',\n            event => {\n                // We only care about space and ⬆️ ⬇️️ ➡️\n                if (![32, 38, 39, 40].includes(event.which)) {\n                    return;\n                }\n\n                // Prevent play / seek\n                event.preventDefault();\n                event.stopPropagation();\n\n                // We're just here to prevent the keydown bubbling\n                if (event.type === 'keydown') {\n                    return;\n                }\n\n                const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n                // Show the respective menu\n                if (!isRadioButton && [32, 39].includes(event.which)) {\n                    controls.showMenuPanel.call(this, type, true);\n                } else {\n                    let target;\n\n                    if (event.which !== 32) {\n                        if (event.which === 40 || (isRadioButton && event.which === 39)) {\n                            target = menuItem.nextElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.firstElementChild;\n                            }\n                        } else {\n                            target = menuItem.previousElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.lastElementChild;\n                            }\n                        }\n\n                        setFocus.call(this, target, true);\n                    }\n                }\n            },\n            false,\n        );\n\n        // Enter will fire a `click` event but we still need to manage focus\n        // So we bind to keyup which fires after and set focus here\n        on(menuItem, 'keyup', event => {\n            if (event.which !== 13) {\n                return;\n            }\n\n            controls.focusFirstMenuItem.call(this, null, true);\n        });\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n        const menuItem = createElement(\n            'button',\n            extend(attributes, {\n                type: 'button',\n                role: 'menuitemradio',\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-checked': checked,\n                value,\n            }),\n        );\n\n        const flex = createElement('span');\n\n        // We have to set as HTML incase of special characters\n        flex.innerHTML = title;\n\n        if (is.element(badge)) {\n            flex.appendChild(badge);\n        }\n\n        menuItem.appendChild(flex);\n\n        // Replicate radio button behaviour\n        Object.defineProperty(menuItem, 'checked', {\n            enumerable: true,\n            get() {\n                return menuItem.getAttribute('aria-checked') === 'true';\n            },\n            set(checked) {\n                // Ensure exclusivity\n                if (checked) {\n                    Array.from(menuItem.parentNode.children)\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\n                }\n\n                menuItem.setAttribute('aria-checked', checked ? 'true' : 'false');\n            },\n        });\n\n        this.listeners.bind(\n            menuItem,\n            'click keyup',\n            event => {\n                if (is.keyboardEvent(event) && event.which !== 32) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                menuItem.checked = true;\n\n                switch (type) {\n                    case 'language':\n                        this.currentTrack = Number(value);\n                        break;\n\n                    case 'quality':\n                        this.quality = value;\n                        break;\n\n                    case 'speed':\n                        this.speed = parseFloat(value);\n                        break;\n\n                    default:\n                        break;\n                }\n\n                controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n            },\n            type,\n            false,\n        );\n\n        controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n        list.appendChild(menuItem);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n        if (this.duration >= 2 ** 32) {\n            toggleHidden(this.elements.display.currentTime, true);\n            toggleHidden(this.elements.progress, true);\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panels[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            if (!this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('[role=\"menu\"]');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n        const tracks = captions.getTracks.call(this);\n        const toggle = Boolean(tracks.length);\n\n        // Toggle the pane and tab\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { buttons } = this.elements.settings;\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Focus the first menu item in a given (or visible) menu\n    focusFirstMenuItem(pane, tabFocus = false) {\n        if (this.elements.settings.popup.hidden) {\n            return;\n        }\n\n        let target = pane;\n\n        if (!is.element(target)) {\n            target = Object.values(this.elements.settings.panels).find(pane => !pane.hidden);\n        }\n\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\n\n        setFocus.call(this, firstItem, tabFocus);\n    },\n\n    // Show/hide menu\n    toggleMenu(input) {\n        const { popup } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(popup) || !is.element(button)) {\n            return;\n        }\n\n        // True toggle by default\n        const { hidden } = popup;\n        let show = hidden;\n\n        if (is.boolean(input)) {\n            show = input;\n        } else if (is.keyboardEvent(input) && input.which === 27) {\n            show = false;\n        } else if (is.event(input)) {\n            const isMenuItem = popup.contains(input.target);\n\n            // If the click was inside the menu or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && input.target !== button && show)) {\n                return;\n            }\n        }\n\n        // Set button attributes\n        button.setAttribute('aria-expanded', show);\n\n        // Show the actual popup\n        toggleHidden(popup, !show);\n\n        // Add class hook\n        toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n        // Focus the first item if key interaction\n        if (show && is.keyboardEvent(input)) {\n            controls.focusFirstMenuItem.call(this, null, true);\n        } else if (!show && !hidden) {\n            // If closing, re-focus the button\n            setFocus.call(this, button, is.keyboardEvent(input));\n        }\n    },\n\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Show a panel in the menu\n    showMenuPanel(type = '', tabFocus = false) {\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\n\n        // Nothing to show, bail\n        if (!is.element(target)) {\n            return;\n        }\n\n        // Hide all other panels\n        const container = target.parentNode;\n        const current = Array.from(container.children).find(node => !node.hidden);\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getMenuSize.call(this, target);\n\n            // Restore auto height/width\n            const restore = event => {\n                // We're only bothered about height and width on the container\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n\n        // Set attributes on target\n        toggleHidden(target, false);\n\n        // Focus the first item\n        controls.focusFirstMenuItem.call(this, target, tabFocus);\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Volume controls\n        if (this.config.controls.includes('mute') || this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Toggle mute button\n            if (this.config.controls.includes('mute')) {\n                volume.appendChild(controls.createButton.call(this, 'mute'));\n            }\n\n            // Volume range control\n            if (this.config.controls.includes('volume')) {\n                // Set the attributes\n                const attributes = {\n                    max: 1,\n                    step: 0.05,\n                    value: this.config.volume,\n                };\n\n                // Create the volume range slider\n                volume.appendChild(\n                    controls.createRange.call(\n                        this,\n                        'volume',\n                        extend(attributes, {\n                            id: `plyr-volume-${data.id}`,\n                        }),\n                    ),\n                );\n\n                this.elements.volume = volume;\n            }\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const control = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            control.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const popup = createElement('div', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n            });\n\n            // Create the menu\n            const menu = createElement('div', {\n                role: 'menu',\n            });\n\n            home.appendChild(menu);\n            inner.appendChild(home);\n            this.elements.settings.panels.home = home;\n\n            // Build the menu items\n            this.config.settings.forEach(type => {\n                // TODO: bundle this with the createMenuItem helper and bindings\n                const menuItem = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        role: 'menuitem',\n                        'aria-haspopup': true,\n                        hidden: '',\n                    }),\n                );\n\n                // Bind menu shortcuts for keyboard users\n                controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n                // Show menu on click\n                on(menuItem, 'click', () => {\n                    controls.showMenuPanel.call(this, type, false);\n                });\n\n                const flex = createElement('span', null, i18n.get(type, this.config));\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                flex.appendChild(value);\n                menuItem.appendChild(flex);\n                menu.appendChild(menuItem);\n\n                // Build the panes\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                });\n\n                // Back button\n                const backButton = createElement('button', {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                });\n\n                // Visible label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            'aria-hidden': true,\n                        },\n                        i18n.get(type, this.config),\n                    ),\n                );\n\n                // Screen reader label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            class: this.config.classNames.hidden,\n                        },\n                        i18n.get('menuBack', this.config),\n                    ),\n                );\n\n                // Go back via keyboard\n                on(\n                    pane,\n                    'keydown',\n                    event => {\n                        // We only care about <-\n                        if (event.which !== 37) {\n                            return;\n                        }\n\n                        // Prevent seek\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        // Show the respective menu\n                        controls.showMenuPanel.call(this, 'home', true);\n                    },\n                    false,\n                );\n\n                // Go back via button click\n                on(backButton, 'click', () => {\n                    controls.showMenuPanel.call(this, 'home', false);\n                });\n\n                // Add to pane\n                pane.appendChild(backButton);\n\n                // Menu\n                pane.appendChild(\n                    createElement('div', {\n                        role: 'menu',\n                    }),\n                );\n\n                inner.appendChild(pane);\n\n                this.elements.settings.buttons[type] = menuItem;\n                this.elements.settings.panels[type] = pane;\n            });\n\n            popup.appendChild(inner);\n            control.appendChild(popup);\n            container.appendChild(control);\n\n            this.elements.settings.popup = popup;\n            this.elements.settings.menu = control;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        // Set available quality levels\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        // If function, run it and use output\n        if (is.function(this.config.controls)) {\n            this.config.controls = this.config.controls.call(this.props);\n        }\n\n        // Convert falsy controls to empty array (primarily for empty strings)\n        if (!this.config.controls) {\n            this.config.controls = [];\n        }\n\n        if (is.element(this.config.controls) || is.string(this.config.controls)) {\n            // HTMLElement or Non-empty string passed as the option\n            container = this.config.controls;\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n        const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n        target[insertMethod]('afterbegin', container);\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Add pressed property to buttons\n        if (!is.empty(this.elements.buttons)) {\n            const addProperty = button => {\n                const className = this.config.classNames.controlPressed;\n                Object.defineProperty(button, 'pressed', {\n                    enumerable: true,\n                    get() {\n                        return hasClass(button, className);\n                    },\n                    set(pressed = false) {\n                        toggleClass(button, className, pressed);\n                    },\n                });\n            };\n\n            // Toggle classname when pressed property is set\n            Object.values(this.elements.buttons)\n                .filter(Boolean)\n                .forEach(button => {\n                    if (is.array(button) || is.nodeList(button)) {\n                        Array.from(button).filter(Boolean).forEach(addProperty);\n                    } else {\n                        addProperty(button);\n                    }\n                });\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n        const languages = dedupe(browserLanguages.map(language => language.split('-')[0]));\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // Update available languages in list\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\n\n    // Hide Control bar\n    hideControlbarOnLoad: true,\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        'fullscreen',\n    ],\n    settings: ['captions', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n\n        // Quality\n        'qualitychange',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        display: {\n            time: 'plyr__time',\n        },\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {string} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n        button.pressed = this.active;\n    }\n\n    // Trigger an event\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative\n            ? this.player.media\n            : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitEnterFullscreen();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch); \n\n        toggleClass(this.elements.container, this.config.classNames.hideControls, true); \n\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        console.log('CHECK PLAYING STATE');\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            if (this.is_stopped === false) {\n                this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\n            } else {\n                this.toggleControls(Boolean(force || this.loading || controls.pressed || controls.hover));\n            }\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { getElement, getElements, hasClass, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n        this.focusTimer = null;\n        this.lastKeyDown = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.setTabFocus = this.setTabFocus.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const { player } = this;\n        const { elements } = player;\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            player.currentTime = player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = document.activeElement;\n            if (is.element(focused)) {\n                const { editable } = player.config.selectors;\n                const { seek } = elements.inputs;\n\n                if (focused !== seek && matches(focused, editable)) {\n                    return;\n                }\n\n                if (event.which === 32 && matches(focused, 'button, [role^=\"menuitem\"]')) {\n                    return;\n                }\n            }\n\n            // Which keycodes should we prevent default\n            const preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        player.muted = !player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    player.loop = !player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!player.fullscreen.enabled && player.fullscreen.active && code === 27) {\n                player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        const { player } = this;\n        const { elements } = player;\n\n        player.touch = true;\n\n        // Add touch class\n        toggleClass(elements.container, player.config.classNames.isTouch, true);\n    }\n\n    setTabFocus(event) {\n        const { player } = this;\n        const { elements } = player;\n\n        clearTimeout(this.focusTimer);\n\n        // Ignore any key other than tab\n        if (event.type === 'keydown' && event.which !== 9) {\n            return;\n        }\n\n        // Store reference to event timeStamp\n        if (event.type === 'keydown') {\n            this.lastKeyDown = event.timeStamp;\n        }\n\n        // Remove current classes\n        const removeCurrent = () => {\n            const className = player.config.classNames.tabFocus;\n            const current = getElements.call(player, `.${className}`);\n            toggleClass(current, className, false);\n        };\n\n        // Determine if a key was pressed to trigger this event\n        const wasKeyDown = event.timeStamp - this.lastKeyDown <= 20;\n\n        // Ignore focus events if a key was pressed prior\n        if (event.type === 'focus' && !wasKeyDown) {\n            return;\n        }\n\n        // Remove all current\n        removeCurrent();\n\n        // Delay the adding of classname until the focus has changed\n        // This event fires before the focusin event\n        this.focusTimer = setTimeout(() => {\n            const focused = document.activeElement;\n\n            // Ignore if current focus element isn't inside the player\n            if (!elements.container.contains(focused)) {\n                return;\n            }\n\n            toggleClass(document.activeElement, player.config.classNames.tabFocus, true);\n        }, 10);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        const { player } = this;\n\n        // Keyboard shortcuts\n        if (player.config.keyboard.global) {\n            toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(player, document.body, 'touchstart', this.firstTouch);\n\n        // Tab focus detection\n        toggleListener.call(player, document.body, 'keydown focus blur', this.setTabFocus, toggle, false, true);\n    }\n\n    // Container listeners\n    container() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Keyboard shortcuts\n        if (!player.config.keyboard.global && player.config.keyboard.focused) {\n            on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            player,\n            elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = elements;\n\n                // Remove button states for fullscreen\n                if (controls && event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(player, true);\n                    // Use longer timeout for touch devices\n                    delay = player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(player.timers.controls);\n\n                // Set new timer to prevent flicker when seeking\n                player.timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Time change on media\n        on.call(player, player.media, 'timeupdate seeking seeked', event => controls.timeUpdate.call(player, event));\n\n        // Display duration\n        on.call(player, player.media, 'durationchange loadeddata loadedmetadata', event =>\n            controls.durationUpdate.call(player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        on.call(player, player.media, 'canplay', () => {\n            toggleHidden(elements.volume, !player.hasAudio);\n            toggleHidden(elements.buttons.mute, !player.hasAudio);\n        });\n\n        // Handle the media finishing\n        on.call(player, player.media, 'ended', () => {\n            // Show poster on end\n            if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n                // Restart\n                player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(player, player.media, 'progress playing seeking seeked', event =>\n            controls.updateProgress.call(player, event),\n        );\n\n        // Handle volume changes\n        on.call(player, player.media, 'volumechange', event => controls.updateVolume.call(player, event));\n\n        // Handle play/pause\n        on.call(player, player.media, 'playing play pause ended emptied timeupdate', event =>\n            ui.checkPlaying.call(player, event),\n        );\n\n        // Loading state\n        on.call(player, player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(player, event));\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(player, player.media, 'playing', () => {\n            if (!player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (player.ads.enabled && !player.ads.initialized) {\n                // Wait for manager response\n                player.ads.managerPromise.then(() => player.ads.play()).catch(() => player.play());\n            }\n        });\n\n        // Click video\n        if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause ore restart\n            on.call(player, elements.container, 'click touchstart', event => {\n                const targets = [elements.container, wrapper];\n\n                // Ignore if click if not container or in video wrapper\n                if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n                    return;\n                }\n\n                // First touch on touch devices will just show controls (if we're hiding controls)\n                // If controls are shown then it'll toggle like a pointer device\n                if (\n                    player.config.hideControls &&\n                    player.touch &&\n                    hasClass(elements.container, player.config.classNames.hideControls)\n                ) {\n                    return;\n                }\n\n                if (player.ended) {\n                    player.restart();\n                    player.play();\n                } else {\n                    player.togglePlay();\n                }\n            });\n        }\n\n        // Disable right click\n        if (player.supported.ui && player.config.disableContextMenu) {\n            on.call(\n                player,\n                elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(player, player.media, 'volumechange', () => {\n            // Save to storage\n            player.storage.set({\n                volume: player.volume,\n                muted: player.muted,\n            });\n        });\n\n        // Speed change\n        on.call(player, player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(player, 'speed');\n\n            // Save to storage\n            player.storage.set({ speed: player.speed });\n        });\n\n        // Quality change\n        on.call(player, player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n\n        on.call(player, player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = player.media.error;\n            }\n\n            triggerEvent.call(player, elements.container, event.type, true, detail);\n        });\n    }\n\n    // Run default and custom handlers\n    proxy(event, defaultHandler, customHandlerKey) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n            returned = customHandler.call(player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned && is.function(defaultHandler)) {\n            defaultHandler.call(player, event);\n        }\n    }\n\n    // Trigger custom and default handlers\n    bind(element, type, defaultHandler, customHandlerKey, passive = true) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n\n        on.call(\n            player,\n            element,\n            type,\n            event => this.proxy(event, defaultHandler, customHandlerKey),\n            passive && !hasCustomHandler,\n        );\n    }\n\n    // Listen for control events\n    controls() {\n        const { player } = this;\n        const { elements } = player;\n\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Play/pause toggle\n        if (elements.buttons.play) {\n            Array.from(elements.buttons.play).forEach(button => {\n                this.bind(button, 'click', player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n        // Rewind\n        this.bind(elements.buttons.rewind, 'click', player.rewind, 'rewind');\n\n        // Rewind\n        this.bind(elements.buttons.fastForward, 'click', player.forward, 'fastForward');\n\n        // Mute toggle\n        this.bind(\n            elements.buttons.mute,\n            'click',\n            () => {\n                player.muted = !player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n        // Fullscreen toggle\n        this.bind(\n            elements.buttons.fullscreen,\n            'click',\n            () => {\n                player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        this.bind(\n            elements.buttons.pip,\n            'click',\n            () => {\n                player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n        // Settings menu - click toggle\n        this.bind(elements.buttons.settings, 'click', event => {\n            // Prevent the document click listener closing the menu\n            event.stopPropagation();\n\n            controls.toggleMenu.call(player, event);\n        });\n\n        // Settings menu - keyboard toggle\n        // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n        this.bind(\n            elements.buttons.settings,\n            'keyup',\n            event => {\n                const code = event.which;\n\n                // We only care about space and return\n                if (![13, 32].includes(code)) {\n                    return;\n                }\n\n                // Because return triggers a click anyway, all we need to do is set focus\n                if (code === 13) {\n                    controls.focusFirstMenuItem.call(player, null, true);\n                    return;\n                }\n\n                // Prevent scroll\n                event.preventDefault();\n\n                // Prevent playing video (Firefox)\n                event.stopPropagation();\n\n                // Toggle menu\n                controls.toggleMenu.call(player, event);\n            },\n            null,\n            false, // Can't be passive as we're preventing default\n        );\n\n        // Escape closes menu\n        this.bind(elements.settings.menu, 'keydown', event => {\n            if (event.which === 27) {\n                controls.toggleMenu.call(player, event);\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(elements.inputs.seek, 'mousedown mousemove', event => {\n            const rect = elements.progress.getBoundingClientRect();\n            const percent = 100 / rect.width * (event.pageX - rect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n            const code = event.keyCode ? event.keyCode : event.which;\n            const attribute = 'play-on-seeked';\n\n            if (is.keyboardEvent(event) && (code !== 39 && code !== 37)) {\n                return;\n            }\n\n            // Was playing before?\n            const play = seek.hasAttribute(attribute);\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute(attribute);\n                player.play();\n            } else if (!done && player.playing) {\n                seek.setAttribute(attribute, '');\n                player.pause();\n            }\n        });\n\n        // Fix range inputs on iOS\n        // Super weird iOS bug where after you interact with an <input type=\"range\">,\n        // it takes over further interactions on the page. This is a hack\n        if (browser.isIos) {\n            const inputs = getElements.call(player, 'input[type=\"range\"]');\n            Array.from(inputs).forEach(input => this.bind(input, inputEvent, event => repaint(event.target)));\n        }\n\n        // Seek\n        this.bind(\n            elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                player.currentTime = seekTo / seek.max * player.duration;\n            },\n            'seek',\n        );\n\n        // Seek tooltip\n        this.bind(elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(player, event),\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(element => {\n                this.bind(element, 'input', event => controls.updateRangeFill.call(player, event.target));\n            });\n        }\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n            this.bind(elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (player.currentTime === 0) {\n                    return;\n                }\n\n                player.config.invertTime = !player.config.invertTime;\n\n                controls.timeUpdate.call(player);\n            });\n        }\n\n        // Volume\n        this.bind(\n            elements.inputs.volume,\n            inputEvent,\n            event => {\n                player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mouseenter mouseleave', event => {\n            elements.controls.hover = !player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Focus in/out on controls\n        this.bind(elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = player;\n            const isFocusIn = event.type === 'focusin';\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, isFocusIn);\n\n            // Toggle\n            ui.toggleControls.call(player, isFocusIn);\n\n            // If focusin, hide again after delay\n            if (isFocusIn) {\n                // Restore transition\n                setTimeout(() => {\n                    toggleClass(elements.controls, config.classNames.noTransition, false);\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n\n                // Hide\n                timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n            }\n        });\n\n        // Mouse wheel for volume\n        this.bind(\n            elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = player.media;\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { format, stripHTML } from '../utils/strings';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = 100 / x * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/loadImage';\nimport loadScript from '../utils/loadScript';\nimport { format, generateId } from '../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                hl: player.config.hl, // iframe interface language\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Bail if onReady has already been called. See issue #1108\n                    if (is.function(player.media.play)) {\n                        return;\n                    }\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport i18n from '../utils/i18n';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: window.location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Load could occur after a source change (race condition)\n        if (!this.enabled) {\n            return;\n        }\n\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                    // Create new element\n                    media: createElement(tagName, attributes),\n                });\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.4.3\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n        this.is_stopped = true;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            captions: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                popup: null,\n                menu: null,\n                panels: {},\n                buttons: {},\n            },\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.search.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                            this.config.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        if (this.config.ads.enabled) {\n            this.ads = new Ads(this);\n        }\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        this.is_stopped = false;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN or Infinity before the media has loaded\n        const realDuration = (this.media || {}).duration;\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        }\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n\n            return !hiding;\n        }\n\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n"]}